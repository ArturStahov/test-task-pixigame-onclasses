{"version":3,"sources":["webpack:///./assets/assets.png","webpack:///./assets/sound/runPlay.mp3","webpack:///./assets/sound/won.mp3","webpack:///./assets/sound/click.mp3","webpack:///./assets/sound/Sound_fon.mp3","webpack:///./js/appConfig.js","webpack:///./utils/loader.js","webpack:///./assets/assets.json","webpack:///./js/gameItem.js","webpack:///./js/gameProperty.js","webpack:///./js/components/ButtonPlay.js","webpack:///./utils/generateRandomInt.js","webpack:///./animation/animationReels.js","webpack:///./js/scenes/gameScene.js","webpack:///./js/components/creditsPanel.js","webpack:///./js/scenes/winScene.js","webpack:///./js/scenes/gameOverScene.js","webpack:///./js/scenes/preloadScene.js","webpack:///./js/game.js","webpack:///./index.js","webpack:///./js/logics/checkPlayResult.js"],"names":["module","exports","app","PIXI","transparent","resolution","window","devicePixelRatio","renderer","backgroundColor","view","style","position","display","autoResize","resize","innerWidth","innerHeight","width","height","Loader","loadAllTextures","callback","loaders","add","load","TextureCache","GameItems","this","gameItemsArr","itemId","itemSkin","getGameItems","gameProperty","timePlay","timeWinView","credits","winSalary","timeLoadingGame","ButtonPlay","buttonPlayTexture","buttonPlay","interactive","buttonMode","getButtonPlayContainer","active","texture","disable","generateRandomInt","min","max","Math","floor","random","filterBlur","BlurFilter","GameScene","gameSceneContainer","_createGameSceneContainer","animationReelsContainer","_generateAnimationGameArea","gameAreaContainer","gameCombo","_generateRandomGameArea","visibleAnimationReels","visible","hiddenAnimationsReels","screen","x","y","pivot","set","bg","from","anchor","scale","addChild","getGameSceneContainer","visibleRandomGameArea","generateRandomArea","removeChild","hiddenRandomGameArea","getGameCombo","visibleGameScene","a","b","c","i","rowContainer","j","randomItemId","length","symbolContainer","symbol","round","SYMBOL_SIZE","ItemObj","itemSymbol","push","console","log","arrayItemsForAnim","row","symbols","filters","gsap","to","duration","ease","modifiers","utils","unitize","parseFloat","repeat","animationsReels","CreditsPanel","creditsPanelContainer","creditsText","winSalaryText","_createPanel","Box","lineStyle","beginFill","drawRoundedRect","endFill","fontFamily","fontSize","fill","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","PI","dropShadowDistance","setWinSalaryText","value","text","setCreditsText","getCreditsPanelContainer","WinScene","winSceneContainer","buttonNext","_createWinScene","drawRect","winText","stroke","strokeThickness","visibleWinScene","winValue","hiddenWinScene","getButtonNext","getWinSceneContainer","GameOverScene","gameOverSceneContainer","buttonNewGame","_createGameOverScene","LossText","visibleGameOverScene","hiddenGameOverScene","getButtonNewGame","getGameOverSceneContainer","PreloadScene","loadingSceneContainer","_createPreloadScene","SpinnerLoading","getPreloadSceneContainer","visiblePreloadingScene","hiddenPreloadingScene","filterGlow","GlowFilter","innerStrength","outerStrength","color","document","body","appendChild","gameScene","preloadScene","winScene","gameOverScene","creditsPanel","isLoadingGame","targetClick","targetWin","spinResult","state","soundWin","Audio","soundsWin","soundClick","soundsClick","soundsPlay","soundPlay","soundsBg","soundBg","start","GameItem","buttonPlayContainer","on","handlerClickPlay","bind","WinScenes","handlerClickNextPlay","handlerClickNewGame","preloadSceneContainer","stage","update","ticker","delta","gameLoop","eventPreloadingGame","win","loss","resultLineItem","resultCheckWild","some","item","checkSymbol","resultCheckArbitrary","filter","checkALine","checkBLine","checkCLine","checkPlayResult","play","loop","groupSpinEvents","winAutoHidden","pause","currentTime","forEach","children"],"mappings":"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","file":"main.2781bebd574fdbaca116.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/assets.png\";","export default __webpack_public_path__ + \"static/media/runPlay.563738c7.mp3\";","export default __webpack_public_path__ + \"static/media/won.01408a5f.mp3\";","export default __webpack_public_path__ + \"static/media/click.747cc046.mp3\";","export default __webpack_public_path__ + \"static/media/Sound_fon.9f887eb4.mp3\";","import * as PIXI from 'pixi.js';\r\n\r\nconst app = new PIXI.Application({\r\n    transparent: false,\r\n    resolution: window.devicePixelRatio,\r\n\r\n});\r\n\r\napp.renderer.backgroundColor = 0x000000;\r\napp.renderer.view.style.position = \"absolute\";\r\napp.renderer.view.style.display = \"block\";\r\napp.renderer.autoResize = true;\r\napp.renderer.resize(window.innerWidth, window.innerHeight);\r\napp.view.style.width = window.innerWidth + \"px\";\r\napp.view.style.height = window.innerHeight + \"px\";\r\n\r\nexport default app;","import * as PIXI from \"pixi.js\";\r\nimport '../assets/assets.json';\r\nimport '../assets/assets.png';\r\nclass Loader {\r\n\r\n    static loadAllTextures(callback) {\r\n        const loaders = new PIXI.Loader();\r\n        loaders.add('../assets/assets.json')\r\n        loaders.load(() => {\r\n            callback();\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default Loader;","export default __webpack_public_path__ + \"assets/assets.json\";","import * as PIXI from 'pixi.js';\r\nconst TextureCache = PIXI.utils.TextureCache;\r\n\r\nexport default class GameItems {\r\n    constructor() {\r\n\r\n        this.gameItemsArr = [\r\n            { itemId: 0, itemSkin: TextureCache[\"SYM1.png\"] },\r\n            { itemId: 1, itemSkin: TextureCache[\"SYM2.png\"] },\r\n            { itemId: 2, itemSkin: TextureCache[\"SYM3.png\"] },\r\n            { itemId: 3, itemSkin: TextureCache[\"SYM4.png\"] },\r\n            { itemId: 4, itemSkin: TextureCache[\"SYM5.png\"] },\r\n            { itemId: 5, itemSkin: TextureCache[\"SYM6.png\"] },\r\n        ];\r\n    }\r\n    getGameItems() {\r\n        return this.gameItemsArr;\r\n    }\r\n\r\n}","export const gameProperty = {\r\n    timePlay: 0,\r\n    timeWinView: 0,\r\n    credits: 0,\r\n    winSalary: 0,\r\n    timeLoadingGame: 100,\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nconst TextureCache = PIXI.utils.TextureCache;\r\n\r\n\r\nexport default class ButtonPlay {\r\n    constructor() {\r\n        this.buttonPlayTexture = [\r\n            TextureCache[\"BTN_Spin.png\"],\r\n            TextureCache[\"BTN_Spin_d.png\"],\r\n        ];\r\n        this.buttonPlay = new PIXI.Sprite(this.buttonPlayTexture[0]);\r\n        this.buttonPlay.interactive = true;\r\n        this.buttonPlay.buttonMode = true;\r\n    }\r\n    getButtonPlayContainer() {\r\n        return this.buttonPlay;\r\n    }\r\n\r\n    active() {\r\n        this.buttonPlay.texture = this.buttonPlayTexture[0];\r\n    }\r\n\r\n    disable() {\r\n        this.buttonPlay.texture = this.buttonPlayTexture[1];\r\n    }\r\n}","const generateRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\r\nexport default generateRandomInt;","import * as PIXI from 'pixi.js';\r\nimport gsap from 'gsap';\r\n\r\n\r\nconst filterBlur = new PIXI.filters.BlurFilter(0.8, 0.9, 0.6);\r\n\r\n\r\n/**\r\n * function create animation and play her\r\n * @param {Array} arrayItemsForAnim it's array with objects game rows with symbols for animation\r\n */\r\n\r\nexport const animationsReels = (arrayItemsForAnim) => {\r\n    for (let i = 0; i < 3; i += 1) {\r\n        arrayItemsForAnim[i].symbols[0].filters = [filterBlur];\r\n        arrayItemsForAnim[i].symbols[2].filters = [filterBlur];\r\n        arrayItemsForAnim[i].symbols[5].filters = [filterBlur];\r\n\r\n        gsap.to(arrayItemsForAnim[i].symbols[0], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: 270,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 250), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[1], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 200), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[2], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[3], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[4], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[5], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: 125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../appConfig.js'\r\nimport generateRandomInt from '../../utils/generateRandomInt.js'\r\nimport { animationsReels } from '../../animation/animationReels.js'\r\n\r\n//width row\r\nconst ROW_WIDTH = 250;\r\n//symbol size\r\nconst SYMBOL_SIZE = 200;\r\nconst TextureCache = PIXI.utils.TextureCache;\r\n\r\nexport default class GameScene {\r\n    constructor(gameItemsArr) {\r\n        this.gameSceneContainer = null;\r\n        this._createGameSceneContainer()\r\n        this.gameItemsArr = gameItemsArr;\r\n        this.animationReelsContainer = null;\r\n        this._generateAnimationGameArea()\r\n        this.gameAreaContainer = null;\r\n        this.gameCombo = null;\r\n        this._generateRandomGameArea();\r\n    }\r\n\r\n    visibleAnimationReels() {\r\n        this.animationReelsContainer.visible = true;\r\n    }\r\n\r\n    hiddenAnimationsReels() {\r\n        this.animationReelsContainer.visible = false;\r\n    }\r\n\r\n    _createGameSceneContainer() {\r\n        this.gameSceneContainer = new PIXI.Container();\r\n        this.gameSceneContainer.width = app.screen.width;\r\n        this.gameSceneContainer.height = app.screen.height;\r\n        this.gameSceneContainer.x = app.screen.width / 2;\r\n        this.gameSceneContainer.y = app.screen.height / 2;\r\n        this.gameSceneContainer.pivot.set(app.screen.width / 2, app.screen.height / 2);\r\n        //add background\r\n        const bg = new PIXI.Sprite.from(TextureCache[\"BG.png\"]);\r\n        bg.position.set(app.screen.width / 2, app.screen.height / 2);\r\n        bg.anchor.set(0.5);\r\n        bg.scale.x = Math.min(app.screen.width / bg.width);\r\n        bg.scale.y = Math.min(app.screen.height / bg.height);\r\n        this.gameSceneContainer.addChild(bg);\r\n        this.gameSceneContainer.visible = false\r\n    }\r\n\r\n    getGameSceneContainer() {\r\n        return this.gameSceneContainer;\r\n    }\r\n\r\n    visibleRandomGameArea() {\r\n        this.gameAreaContainer.visible = true\r\n    }\r\n\r\n    generateRandomArea() {\r\n        this.gameSceneContainer.removeChild(this.gameAreaContainer);\r\n        this._generateRandomGameArea();\r\n    }\r\n\r\n    hiddenRandomGameArea() {\r\n        this.gameAreaContainer.visible = false\r\n    }\r\n\r\n    getGameCombo() {\r\n        return this.gameCombo;\r\n    }\r\n    visibleGameScene() {\r\n        this.gameSceneContainer.visible = true\r\n    }\r\n\r\n    _generateRandomGameArea() {\r\n        this.gameAreaContainer = new PIXI.Container();\r\n        this.gameCombo = {\r\n            a: [],\r\n            b: [],\r\n            c: [],\r\n        };\r\n        for (let i = 0; i < 3; i += 1) {\r\n            const rowContainer = new PIXI.Container();\r\n            rowContainer.x = i * ROW_WIDTH * 1.5;\r\n            this.gameAreaContainer.addChild(rowContainer);\r\n\r\n            for (let j = 0; j < 3; j += 1) {\r\n                let randomItemId = generateRandomInt(0, this.gameItemsArr.length - 1);\r\n                const symbolContainer = new PIXI.Container();\r\n                const symbol = new PIXI.Sprite.from(this.gameItemsArr[randomItemId].itemSkin);\r\n                symbol.y = 0;\r\n                symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n                symbol.x = 0;\r\n                symbol.anchor.set(0.5);\r\n                symbolContainer.addChild(symbol);\r\n                symbolContainer.y = j * SYMBOL_SIZE;\r\n                symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n\r\n                const ItemObj = {\r\n                    itemId: randomItemId,\r\n                    itemSymbol: symbolContainer,\r\n                }\r\n\r\n                rowContainer.addChild(symbolContainer);\r\n                switch (j) {\r\n                    case 0:\r\n                        this.gameCombo.a.push(ItemObj);\r\n                        break;\r\n                    case 1:\r\n                        this.gameCombo.b.push(ItemObj);\r\n                        break;\r\n                    case 2:\r\n                        this.gameCombo.c.push(ItemObj);\r\n                        break;\r\n                    default: console.log(\"error value\");\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        this.gameAreaContainer.y = app.screen.height / 2;\r\n        this.gameAreaContainer.x = app.screen.width / 2 - 100;\r\n        this.gameAreaContainer.pivot.set(this.gameAreaContainer.width / 2, this.gameAreaContainer.height / 2);\r\n        this.gameSceneContainer.addChild(this.gameAreaContainer);\r\n    }\r\n\r\n    _generateAnimationGameArea() {\r\n        this.animationReelsContainer = new PIXI.Container();\r\n        const arrayItemsForAnim = [];\r\n        for (let i = 0; i < 3; i += 1) {\r\n            const rowContainer = new PIXI.Container();\r\n            rowContainer.x = i * ROW_WIDTH * 1.5;\r\n            this.animationReelsContainer.addChild(rowContainer);\r\n            const row = {\r\n                symbols: [],\r\n            };\r\n\r\n            for (let j = 0; j < 6; j += 1) {\r\n                let randomItemId = generateRandomInt(0, this.gameItemsArr.length - 1);\r\n                const symbolContainer = new PIXI.Container();\r\n                const symbol = new PIXI.Sprite.from(this.gameItemsArr[randomItemId].itemSkin);\r\n                symbol.y = 0;\r\n                symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n                symbol.x = 0;\r\n                symbol.anchor.set(0.5);\r\n                symbolContainer.addChild(symbol);\r\n                symbolContainer.y = j * SYMBOL_SIZE;\r\n                symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n                row.symbols.push(symbolContainer);\r\n                rowContainer.addChild(symbolContainer);\r\n\r\n            }\r\n            arrayItemsForAnim.push(row);\r\n        }\r\n        animationsReels(arrayItemsForAnim)\r\n        this.animationReelsContainer.y = app.screen.height - 100;\r\n        this.animationReelsContainer.x = (app.screen.width / 2) - 100;\r\n        this.animationReelsContainer.pivot.set(this.animationReelsContainer.width / 2, this.animationReelsContainer.height / 2);\r\n        this.gameSceneContainer.addChild(this.animationReelsContainer)\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nexport default class CreditsPanel {\r\n    constructor(credits, winSalary) {\r\n        this.creditsPanelContainer = new PIXI.Container();\r\n        this.creditsText = null;\r\n        this.winSalaryText = null;\r\n        this._createPanel(credits, winSalary)\r\n    }\r\n\r\n    _createPanel(credits, winSalary) {\r\n        const Box = new PIXI.Graphics();\r\n        Box.lineStyle(2, 0xBF6730, 1);\r\n        Box.beginFill(0x061639, 1);\r\n        Box.drawRoundedRect(0, 0, 200, 150);\r\n        Box.pivot.set(Box.width / 2, Box.height / 2);\r\n        Box.endFill();\r\n        this.creditsPanelContainer.addChild(Box);\r\n\r\n        this.creditsText = new PIXI.Text(`MONEY: ${credits}$`, {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 16,\r\n            fill: \"yellow\",\r\n            dropShadow: true,\r\n            dropShadowColor: \"#ffffff\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 3,\r\n            dropShadowDistance: 3,\r\n        });\r\n        this.creditsText.anchor.set(0.5);\r\n        this.creditsText.position.set(-20, -30);\r\n        this.creditsPanelContainer.addChild(this.creditsText);\r\n\r\n        this.winSalaryText = new PIXI.Text(`WIN: ${winSalary}$`, {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 16,\r\n            fill: \"yellow\",\r\n            dropShadow: true,\r\n            dropShadowColor: \"#ffffff\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 3,\r\n            dropShadowDistance: 3,\r\n        });\r\n        this.winSalaryText.anchor.set(0.5);\r\n        this.winSalaryText.position.set(-47, -5);\r\n        this.creditsPanelContainer.addChild(this.winSalaryText);\r\n    }\r\n\r\n    setWinSalaryText(value) {\r\n        this.winSalaryText.text = `WIN: ${value}$`;\r\n    }\r\n    setCreditsText(value) {\r\n        this.creditsText.text = `MONEY: ${value}$`;\r\n    }\r\n    getCreditsPanelContainer() {\r\n        return this.creditsPanelContainer;\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../appConfig.js'\r\n\r\nexport default class WinScene {\r\n\r\n    constructor() {\r\n        this.winSceneContainer = null;\r\n        this.winSalaryText = null;\r\n        this.buttonNext = null;\r\n        this._createWinScene();\r\n    }\r\n\r\n    _createWinScene() {\r\n        this.winSceneContainer = new PIXI.Container();\r\n        //background panel\r\n        const Box = new PIXI.Graphics();\r\n        Box.lineStyle(2, 0x061639, 1);\r\n        Box.beginFill(0x061639, 0.45);\r\n        Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n        Box.pivot.set(Box.width / 2, Box.height / 2);\r\n        Box.endFill();\r\n        this.winSceneContainer.addChild(Box);\r\n\r\n        this.buttonNext = new PIXI.Graphics();\r\n        this.buttonNext.beginFill(0x061639, 0.1);\r\n        this.buttonNext.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n        this.buttonNext.pivot.set(this.buttonNext.width / 2, this.buttonNext.height / 2);\r\n        this.buttonNext.endFill();\r\n        this.buttonNext.interactive = true;\r\n        this.buttonNext.buttonMode = true;\r\n        this.winSceneContainer.addChild(this.buttonNext);\r\n\r\n\r\n        //text info You Won\r\n        const winText = new PIXI.Text(\"YOU WON!\", {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 36,\r\n            fill: \"yellow\",\r\n            stroke: 'black',\r\n            strokeThickness: 4,\r\n            dropShadow: true,\r\n            dropShadowColor: \"#ffffff\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 6,\r\n            dropShadowDistance: 6,\r\n        });\r\n        winText.anchor.set(0.5);\r\n        winText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n        this.winSceneContainer.addChild(winText);\r\n\r\n        this.winSalaryText = new PIXI.Text(`WIN`, {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 36,\r\n            fill: \"yellow\",\r\n            dropShadow: true,\r\n            dropShadowColor: \"#ffffff\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 3,\r\n            dropShadowDistance: 3,\r\n        });\r\n        this.winSalaryText.anchor.set(0.5);\r\n        this.winSalaryText.position.set(app.screen.width / 2, app.screen.height / 2 + 50);\r\n        this.winSceneContainer.addChild(this.winSalaryText);\r\n    }\r\n\r\n    visibleWinScene(winValue) {\r\n        this.winSceneContainer.visible = true;\r\n        this.winSalaryText.text = `${winValue}$`\r\n    }\r\n\r\n    hiddenWinScene() {\r\n        this.winSceneContainer.visible = false;\r\n    }\r\n\r\n    getButtonNext() {\r\n        return this.buttonNext\r\n    }\r\n    getWinSceneContainer() {\r\n        return this.winSceneContainer\r\n    }\r\n\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../appConfig.js'\r\n\r\nexport default class GameOverScene {\r\n\r\n    constructor() {\r\n        this.gameOverSceneContainer = null;\r\n        this.buttonNewGame = null;\r\n        this._createGameOverScene();\r\n    }\r\n\r\n    _createGameOverScene() {\r\n        this.gameOverSceneContainer = new PIXI.Container();\r\n        //background panel\r\n        const Box = new PIXI.Graphics();\r\n        Box.lineStyle(2, 0x061639, 1);\r\n        Box.beginFill(0x061639, 0.45);\r\n        Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n        Box.pivot.set(Box.width / 2, Box.height / 2);\r\n        Box.endFill();\r\n        this.gameOverSceneContainer.addChild(Box);\r\n        //button new game\r\n        this.buttonNewGame = new PIXI.Graphics();\r\n        this.buttonNewGame.beginFill(0x061639, 0.1);\r\n        this.buttonNewGame.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n        this.buttonNewGame.pivot.set(this.buttonNewGame.width / 2, this.buttonNewGame.height / 2);\r\n        this.buttonNewGame.endFill();\r\n        this.buttonNewGame.interactive = true;\r\n        this.buttonNewGame.buttonMode = true;\r\n        this.gameOverSceneContainer.addChild(this.buttonNewGame);\r\n\r\n\r\n        //text info You loss\r\n        const LossText = new PIXI.Text(\"YOU LOSS!\", {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 36,\r\n            fill: \"yellow\",\r\n            stroke: 'black',\r\n            strokeThickness: 4,\r\n            dropShadow: true,\r\n            dropShadowColor: \"#ffffff\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 6,\r\n            dropShadowDistance: 6,\r\n        });\r\n        LossText.anchor.set(0.5);\r\n        LossText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n        this.gameOverSceneContainer.addChild(LossText);\r\n    }\r\n\r\n    visibleGameOverScene() {\r\n        this.gameOverSceneContainer.visible = true;\r\n    }\r\n\r\n    hiddenGameOverScene() {\r\n        this.gameOverSceneContainer.visible = false;\r\n    }\r\n\r\n    getButtonNewGame() {\r\n        return this.buttonNewGame\r\n    }\r\n\r\n    getGameOverSceneContainer() {\r\n        return this.gameOverSceneContainer\r\n    }\r\n\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../appConfig.js'\r\n\r\nexport default class PreloadScene {\r\n    constructor() {\r\n        this.loadingSceneContainer = null;\r\n        this._createPreloadScene();\r\n    }\r\n\r\n    _createPreloadScene() {\r\n        this.loadingSceneContainer = new PIXI.Container();\r\n        const SpinnerLoading = new PIXI.Text(\"...Loading!\", {\r\n            fontFamily: \"Arial\",\r\n            fontSize: 24,\r\n            fill: \"white\",\r\n            stroke: '#ff3300',\r\n            strokeThickness: 4,\r\n            dropShadow: true,\r\n            dropShadowColor: \"#000000\",\r\n            dropShadowBlur: 4,\r\n            dropShadowAngle: Math.PI / 6,\r\n            dropShadowDistance: 6,\r\n        });\r\n        SpinnerLoading.anchor.set(0.5);\r\n        SpinnerLoading.position.set(app.screen.width / 2, app.screen.height / 2);\r\n        this.loadingSceneContainer.addChild(SpinnerLoading);\r\n    }\r\n\r\n    getPreloadSceneContainer() {\r\n        return this.loadingSceneContainer;\r\n    }\r\n\r\n    visiblePreloadingScene() {\r\n        this.loadingSceneContainer.visible = true;\r\n    }\r\n\r\n    hiddenPreloadingScene() {\r\n        this.loadingSceneContainer.visible = false;\r\n    }\r\n}","import { GlowFilter } from 'pixi-filters';\r\nimport soundPlay from '../assets/sound/runPlay.mp3';\r\nimport soundsWin from '../assets/sound/won.mp3';\r\nimport soundsClick from '../assets/sound/click.mp3';\r\nimport soundBg from '../assets/sound/Sound_fon.mp3';\r\nimport app from './appConfig.js';\r\nimport Loader from '../utils/loader.js';\r\nimport GameItem from './gameItem.js';\r\nimport { gameProperty } from './gameProperty';\r\nimport ButtonPlay from './components/ButtonPlay.js';\r\nimport GameScene from './scenes/gameScene.js';\r\nimport CreditsPanel from './components/creditsPanel.js';\r\nimport { checkPlayResult } from './logics/checkPlayResult.js';\r\nimport WinScenes from './scenes/winScene.js';\r\nimport GameOverScene from './scenes/gameOverScene.js';\r\nimport PreloadScene from './scenes/preloadScene.js';\r\n\r\nconst INITIAL_CREDITS = 1000;\r\nconst INITIAL_TIME_PLAY = 300;\r\nconst INITIAL_TIME_WIN = 300;\r\nconst WIN_PRIZE = 10;\r\nconst SPINS_PRICE = 5;\r\n\r\nconst filterGlow = new GlowFilter({ innerStrength: 3, outerStrength: 10, color: 0xffffff });\r\n\r\n\r\nclass Game {\r\n    constructor() {\r\n        document.body.appendChild(app.view);\r\n        this.gameScene = null;\r\n        this.preloadScene = null;\r\n        this.winScene = null;\r\n        this.gameOverScene = null;\r\n        this.buttonPlay = null;\r\n        this.creditsPanel = null;\r\n        this.isLoadingGame = true;\r\n        this.targetClick = false;\r\n        this.targetWin = false;\r\n        this.spinResult = null;\r\n        this.state;\r\n        this.soundWin = new Audio(soundsWin);\r\n        this.soundClick = new Audio(soundsClick);\r\n        this.soundsPlay = new Audio(soundPlay);\r\n        this.soundsBg = new Audio(soundBg);\r\n        this.load();\r\n    }\r\n\r\n    load() {\r\n        Loader.loadAllTextures(() => {\r\n            this.start();\r\n        });\r\n    }\r\n\r\n    start() {\r\n        //initialize game item\r\n        const gameItemsArr = new GameItem().getGameItems();\r\n        //initialize timer\r\n        gameProperty.timePlay = INITIAL_TIME_PLAY;\r\n        gameProperty.timeWinView = INITIAL_TIME_WIN;\r\n\r\n        //initialize start credits\r\n        gameProperty.credits = INITIAL_CREDITS;\r\n\r\n        //initialize game scene\r\n        this.gameScene = new GameScene(gameItemsArr);\r\n        const gameSceneContainer = this.gameScene.getGameSceneContainer();\r\n\r\n        //add button Play\r\n        this.buttonPlay = new ButtonPlay();\r\n        const buttonPlayContainer = this.buttonPlay.getButtonPlayContainer();\r\n        buttonPlayContainer.position.set(app.screen.width - 130, app.screen.height / 2);\r\n        buttonPlayContainer.anchor.set(0.5);\r\n        buttonPlayContainer.on('pointerdown', this.handlerClickPlay.bind(this));\r\n        gameSceneContainer.addChild(buttonPlayContainer);\r\n\r\n        //add creditsPanel\r\n        this.creditsPanel = new CreditsPanel(gameProperty.credits, gameProperty.winSalary);\r\n        const creditsPanelContainer = this.creditsPanel.getCreditsPanelContainer();\r\n        creditsPanelContainer.x = app.screen.width - 135;\r\n        creditsPanelContainer.y = app.screen.height - 200;\r\n        gameSceneContainer.addChild(creditsPanelContainer);\r\n\r\n        //initialize win scene\r\n        this.winScene = new WinScenes();\r\n        const winSceneContainer = this.winScene.getWinSceneContainer();\r\n        const buttonNext = this.winScene.getButtonNext();\r\n        buttonNext.on('pointerdown', this.handlerClickNextPlay.bind(this));\r\n        this.winScene.hiddenWinScene();\r\n\r\n        //initialize game over scene\r\n        this.gameOverScene = new GameOverScene();\r\n        const gameOverSceneContainer = this.gameOverScene.getGameOverSceneContainer();\r\n        const buttonNewGame = this.gameOverScene.getButtonNewGame();\r\n        buttonNewGame.on('pointerdown', this.handlerClickNewGame.bind(this));\r\n        this.gameOverScene.hiddenGameOverScene();\r\n\r\n        //initialize preloadScene\r\n        this.preloadScene = new PreloadScene();\r\n        const preloadSceneContainer = this.preloadScene.getPreloadSceneContainer();\r\n        this.preloadScene.visiblePreloadingScene();\r\n\r\n        this.gameScene.hiddenAnimationsReels();\r\n        this.gameScene.generateRandomArea();\r\n\r\n\r\n        // app.stage.addChild(this.loadingScene);\r\n        app.stage.addChild(gameSceneContainer);\r\n        app.stage.addChild(winSceneContainer);\r\n        app.stage.addChild(gameOverSceneContainer);\r\n        app.stage.addChild(preloadSceneContainer);\r\n\r\n        this.state = this.update;\r\n        app.ticker.add(delta => this.gameLoop(delta));\r\n    }\r\n\r\n    //game event preloading event\r\n    eventPreloadingGame() {\r\n        if (this.isLoadingGame) {\r\n            gameProperty.timeLoadingGame -= 1;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        if (gameProperty.timeLoadingGame == 0) {\r\n            this.isLoadingGame = false;\r\n            this.preloadScene.hiddenPreloadingScene();\r\n            this.gameScene.visibleGameScene();\r\n        }\r\n    }\r\n\r\n\r\n    //Button Play handler\r\n    handlerClickPlay() {\r\n        if (!this.targetClick) {\r\n            if (!gameProperty.credits) {\r\n                this.gameOverScene.visibleGameOverScene();\r\n                return;\r\n            }\r\n\r\n            this.targetClick = true;\r\n            gameProperty.timePlay = INITIAL_TIME_PLAY;\r\n            this.buttonPlay.disable();\r\n            gameProperty.credits -= SPINS_PRICE;\r\n            this.creditsPanel.setCreditsText(gameProperty.credits);\r\n            this.gameScene.generateRandomArea()\r\n            const gameCombo = this.gameScene.getGameCombo()\r\n            this.spinResult = checkPlayResult(gameCombo);\r\n            this.gameScene.hiddenRandomGameArea();\r\n            this.gameScene.visibleAnimationReels();\r\n\r\n            this.soundClick.play();\r\n            this.soundsPlay.play();\r\n            this.soundsBg.play();\r\n            this.soundsBg.loop = true;\r\n        }\r\n    }\r\n    //NextPlay button handler\r\n    handlerClickNextPlay() {\r\n        this.targetWin = false;\r\n        gameProperty.timeWinView = INITIAL_TIME_WIN;\r\n        this.winScene.hiddenWinScene();\r\n    }\r\n\r\n    //New Game button handler\r\n    handlerClickNewGame() {\r\n        gameProperty.credits = INITIAL_CREDITS;\r\n        gameProperty.winSalary = 0;\r\n        this.creditsPanel.setWinSalaryText(gameProperty.winSalary);\r\n        this.creditsPanel.setCreditsText(gameProperty.credits);\r\n        this.gameOverScene.hiddenGameOverScene();\r\n    }\r\n\r\n    gameLoop(delta) {\r\n        this.state(delta);\r\n    }\r\n\r\n    update() {\r\n        this.eventPreloadingGame();\r\n        this.groupSpinEvents();\r\n        this.winAutoHidden();\r\n    }\r\n\r\n    groupSpinEvents() {\r\n        if (this.targetClick) {\r\n            gameProperty.timePlay -= 1;\r\n\r\n            if (gameProperty.timePlay == 0) {\r\n                this.targetClick = false;\r\n                this.buttonPlay.active();\r\n                this.gameScene.hiddenAnimationsReels();\r\n                this.gameScene.visibleRandomGameArea();\r\n                const { win, loss, resultLineItem } = this.spinResult;\r\n                this.soundsPlay.pause();\r\n                this.soundsPlay.currentTime = 0;\r\n                if (win) {\r\n                    resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow]);\r\n                    this.winScene.visibleWinScene(WIN_PRIZE);\r\n                    gameProperty.credits += WIN_PRIZE;\r\n                    gameProperty.winSalary += WIN_PRIZE;\r\n                    this.creditsPanel.setWinSalaryText(gameProperty.winSalary);\r\n                    this.creditsPanel.setCreditsText(gameProperty.credits);\r\n\r\n                    this.targetWin = true;\r\n                    this.soundWin.play();\r\n                    return;\r\n                }\r\n                if (loss) {\r\n                    this.gameOverScene.visibleGameOverScene();\r\n                    resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow]);\r\n                    gameProperty.credits = 0;\r\n                    this.creditsPanel.setCreditsText(gameProperty.credits);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    winAutoHidden() {\r\n        if (this.targetWin) {\r\n            gameProperty.timeWinView -= 1;\r\n            if (gameProperty.timeWinView == 0) {\r\n                this.targetWin = false;\r\n                this.winScene.hiddenWinScene();\r\n                gameProperty.timeWinView = INITIAL_TIME_WIN;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import './base.css'\r\nimport Game from './js/game.js';\r\n\r\nnew Game();","/**\r\n * \r\n * @param {object} gameCombo it result for create game area with line (array) items\r\n * @return {object} object with params result checking gameCombo.  \r\n *      win:bool,\r\n        loss:bool,\r\n        resultLineItem:array with win items,\r\n */\r\nexport const checkPlayResult = (gameCombo) => {\r\n    let win = false;\r\n    let loss = false;\r\n    let resultLineItem = [];\r\n    const wildSymbolId = 0;\r\n\r\n    checkALine();\r\n    checkBLine();\r\n    checkCLine();\r\n\r\n    //checking first game line(column)\r\n    function checkALine() {\r\n        if (win) {\r\n            return;\r\n        }\r\n        let resultCheckWild = gameCombo.a.some(item => item.itemId === wildSymbolId);\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.a[i];\r\n            let resultCheckArbitrary = gameCombo.a.filter(item => item.itemId === checkSymbol.itemId);\r\n\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.a];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    //checking second game line(column)\r\n    function checkBLine() {\r\n        if (win) {\r\n            return;\r\n        }\r\n        let resultCheckWild = gameCombo.b.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.b[i];\r\n            let resultCheckArbitrary = gameCombo.b.filter(item => item.itemId === checkSymbol.itemId);\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.b];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    //checking third game line(column)\r\n    function checkCLine() {\r\n        if (win) {\r\n            return;\r\n        }\r\n        let resultCheckWild = gameCombo.c.some(item => item.itemId === wildSymbolId);\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.c[i];\r\n            let resultCheckArbitrary = gameCombo.c.filter(item => item.itemId === checkSymbol.itemId);\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.c];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c];\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        win,\r\n        loss,\r\n        resultLineItem,\r\n    }\r\n\r\n}"],"sourceRoot":""}